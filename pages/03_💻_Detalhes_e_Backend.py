import streamlit as st
import requests
import pandas as pd
import plotly.express as px

# Configura√ß√£o da barra lateral
st.sidebar.markdown(
    """
    Projeto desenvolvido por [Willian Murakami](https://www.linkedin.com/in/willian-murakami/)
    Para mais projetos, [clique aqui](https://share.streamlit.io/user/willianmurakami).
    """
)

# T√≠tulo e Introdu√ß√£o
st.title("üîß Vis√£o T√©cnica do Dashboard de Vagas")
st.markdown("""
Bem-vindo √† vis√£o t√©cnica do nosso Dashboard de Vagas. Aqui, exploramos as tecnologias que tornam este projeto poss√≠vel, bem como o fluxo de trabalho implementado para coletar, processar e visualizar dados de maneira eficiente.
""")

# Ferramentas e Tecnologias
st.header("üèó Ferramentas e Tecnologias Utilizadas")
st.markdown("""
- **üêç Python**: A linguagem de programa√ß√£o base para nosso projeto, escolhida por sua versatilidade e rica gama de bibliotecas para ci√™ncia de dados.
- **üîÑ Streamlit**: Utilizado para construir nossa interface de usu√°rio interativa. Streamlit converte scripts Python em aplicativos web de forma simples e r√°pida, ideal para prototipagem e deploy de dashboards.
- **‚òÅÔ∏è Streamlit Cloud**: Permite a implanta√ß√£o de nosso aplicativo Streamlit diretamente a partir do reposit√≥rio GitHub, facilitando o compartilhamento e a colabora√ß√£o online.
- **üì° Requests**: Biblioteca crucial para realizar requisi√ß√µes HTTP, permitindo-nos buscar dados em tempo real das APIs, como a do Gupy.
- **üóÉ pandas**: A espinha dorsal do processamento de dados, pandas oferece estruturas de dados de alto desempenho e ferramentas anal√≠ticas robustas.
- **üìä Plotly**: Usado para criar gr√°ficos interativos de alta qualidade, Plotly fornece uma experi√™ncia de visualiza√ß√£o rica e envolvente para o usu√°rio.
""")

# Explica√ß√µes de C√≥digo e M√©todos
st.header("üìú Explica√ß√µes de C√≥digo e M√©todos")

st.subheader("Coleta de Dados")
st.code("""
def fetch_job_data(api_url):
    response = requests.get(api_url)
    if response.status_code == 200:
        return response.json()
    else:
        raise Exception("Falha ao acessar os dados da API")
""", language='python')
st.markdown("""
Este trecho de c√≥digo ilustra como usamos a biblioteca `requests` para realizar chamadas HTTP e obter dados em tempo real de uma API. Verificamos a resposta para assegurar que os dados foram recebidos com sucesso antes de prosseguir com o processamento.
""")

st.subheader("Processamento de Dados")
st.code("""
def clean_data(json_data):
    df = pd.DataFrame(json_data)
    df['date'] = pd.to_datetime(df['date'])
    return df.dropna()
""", language='python')
st.markdown("""
Aqui, utilizamos `pandas` para converter os dados JSON em um DataFrame, que √© uma estrutura de dados tabular. Convertimos strings de datas para objetos datetime e removemos entradas ausentes, preparando os dados para an√°lise.
""")

st.subheader("Visualiza√ß√£o de Dados")
st.code("""
def plot_vacancies_over_time(df):
    fig = px.line(df, x='date', y='vacancies', title='N√∫mero de Vagas ao Longo do Tempo')
    st.plotly_chart(fig)
""", language='python')
st.markdown("""
Este c√≥digo mostra como criamos um gr√°fico de linhas usando `Plotly` para visualizar como o n√∫mero de vagas varia ao longo do tempo. O gr√°fico √© renderizado no Streamlit, permitindo que os usu√°rios interajam com os dados de maneira din√¢mica.
""")

# Telas complementares
st.header("üì∏ De modo visual:")

st.subheader("### Interface do Usu√°rio")
st.image("link_para_imagem_da_interface.png", caption="Exemplo de como o layout do aplicativo aparece para o usu√°rio.")
st.markdown("""
Esta imagem mostra o layout geral da interface do usu√°rio, destacando como o Streamlit facilita a navega√ß√£o e o uso interativo do dashboard.
""")

st.subheader("### Exemplo de Gr√°fico de Linhas")
st.image("link_para_imagem_do_grafico_de_linhas.png", caption="Gr√°fico ilustrando o n√∫mero de vagas ao longo do tempo.")
st.markdown("""
Este print ilustra um gr√°fico de linhas interativo criado com Plotly, visualizando tend√™ncias de vagas ao longo do tempo. Ele permite que os usu√°rios explorem os dados dinamicamente.
""")

st.subheader("### C√≥digo em A√ß√£o")
st.image("link_para_imagem_do_codigo.png", caption="Captura de tela do c√≥digo em execu√ß√£o.")
st.markdown("""
Aqui est√° uma captura de tela do c√≥digo Python em execu√ß√£o, mostrando a integra√ß√£o das bibliotecas e como elas s√£o usadas para processar dados e gerar insights valiosos.
""")

st.markdown("Esperamos que esta vis√£o t√©cnica ofere√ßa uma compreens√£o mais profunda dos processos e tecnologias que sustentam o dashboard. Para d√∫vidas ou mais informa√ß√µes, sinta-se √† vontade para entrar em contato.")